apiVersion: v1
kind: Secret
metadata:
  name: kube-mock-node
  namespace: kube-mock-system
type: Opaque
data:
  config: YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSQ1ZFTkRRV1V5WjBGM1NVSkJaMGxKUzFkWE1uVlZSR1IxY1RoM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEdWRVZVVFVKRlIwRXhWVVVLUVhoTlMyRXpWbWxhV0VwMVdsaFNiR042UVdWR2R6QjVUa1JCZUUxVVNYZFBSRlY1VGxSU1lVWjNNSHBPUkVGNFRVUnJkMDlFVlROT1ZGSmhUVUpWZUFwRmVrRlNRbWRPVmtKQlRWUkRiWFF4V1cxV2VXSnRWakJhV0UxM1oyZEZhVTFCTUVkRFUzRkhVMGxpTTBSUlJVSkJVVlZCUVRSSlFrUjNRWGRuWjBWTENrRnZTVUpCVVVSM1RraDNOME5vTkdkaGVqVnJXbUZJU1ZKS1RuVk5hR3c0TWtWVVdESktjbVZGZEVWRlpXZFlTVnA1YUZaNVRtRnpNRWx4TjFNeVdrZ0tjMFpIU2xaU1RUbExieXRQVjBFMVZsaFFZazFLUm1JdllXSkNOM0ZrVjJjeFJrbElOMVZ2WlVZNVR6TnFWVmRCYldWUVRtRlhiMmhDTmtoSFduaHZiUW8wTVZWb1dUZ3hNRE0xTmxsTlUybFVNVXBKVGs5cWMwTmtjVW95YUdkM2JHTmlhRWsyVFc4M1pVWkpaSFV4V2pOb2FHTlJialJNZUVVelVrbFBOVWxZQ2psSVIyd3lZV2xNUVRKQlJXZzJiakZJUkRSdmFXTjRRVmczYUM5alNYUkhNWFZGU1hobFVrczFRM0ZQZERSNE1IUkxURTVaZWtJMGNrNUlWME12U1dNS2VWTkZhbW94Y0VGWFowMVJaVlJOTmxNME9YUTJjMFptUjNSSVVURnROMjhyVUVOeFNVMTZlQ3R1VHk5T1MzQnZXRUZMY0V0V2RsVjBVakJKVmpkTFJRcDNTWFpSVTJkM1FYWnZNekpGTmxrMFlWQnNLelZpTjNBMFkxbGFRV2ROUWtGQlIycFhWRUpZVFVFMFIwRXhWV1JFZDBWQ0wzZFJSVUYzU1VOd1JFRlFDa0puVGxaSVVrMUNRV1k0UlVKVVFVUkJVVWd2VFVJd1IwRXhWV1JFWjFGWFFrSlRObWQxWm1OclozTlJUM0JzTTIxckt5OUJZMmhNY1d0R1lVeDZRVllLUW1kT1ZraFNSVVZFYWtGTloyZHdjbVJYU214amJUVnNaRWRXZWsxQk1FZERVM0ZIVTBsaU0wUlJSVUpEZDFWQlFUUkpRa0ZSUWxkeWJFSTJOQzk2TVFweVltazJZMnBQUmpVMmRuUm5LMUEyU0VGSlJrbzVhR0ZrTVc5VVJHYzFiR1YzTm5vd2JqRmhPRGsxTWpOMGRHaGtRMHcyVTBaQ2VDdFpNRTFaYVZkQ0NqVm9ibTlJYjNKWVQwbDRWa1ExV1dkb0wxbzBUa2gyZGpCSVoybzBkSEZOSzA5QmVXMTBZbkZRYlRnekwzTkJRbTVuUkdaRWVHWkxTRmx3VG1sVVFtSUtiVEpNWTJzd05EWk1WR1phWVhoNVNHSTNiSHBNTW1ocFN6WkxORTVUVGtzNE5XdFhNRGxMYlVkNVYySmxhVGx1VDFCVlQySlhZblpaUXpjMGFUbHdVZ293WWxKT00zRXlSbEpGYlRZelYyYzRaSE5NV1RoR1pYRTJSVko0YVZscWJIbERla05qYjFoTFEzTnNaRlJ5Tm5oV0t6QnBiemwwVFhkWVVFaFRTVkJUQ2pSd1pYcGtjbG9yYTAxbkszazJlVEZaTVVoeGJYZ3JaRWhMWVd0RlZuRTRObFY1ZUdGaVRTOTZXSEZGV2pCTFZHRXdjVGh3ZDBaWlVYQkpNaXMxUlhjS1RrNDRTMFUyUlZsMFNHTXhDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICAgIHNlcnZlcjogaHR0cHM6Ly8xOTIuMTY4LjEuMTE4OjY0NDMKICBuYW1lOiBrdWJlcm5ldGVzCmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBrdWJlcm5ldGVzCiAgICB1c2VyOiBrdWJlcm5ldGVzLWFkbWluCiAgbmFtZToga3ViZXJuZXRlcy1hZG1pbkBrdWJlcm5ldGVzCmN1cnJlbnQtY29udGV4dDoga3ViZXJuZXRlcy1hZG1pbkBrdWJlcm5ldGVzCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZToga3ViZXJuZXRlcy1hZG1pbgogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUkxWRU5EUVdoSFowRjNTVUpCWjBsSlNVMWxXalZ6ZGtOTlEyZDNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRHVkVWVVRVSkZSMEV4VlVVS1FYaE5TMkV6Vm1sYVdFcDFXbGhTYkdONlFXVkdkekI1VGtSQmVFMVVTWGRQUkZWNVRsUlNZVVozTUhsT1ZFRjRUVlJGZDA5RVZUTk9WRlpoVFVSM2VBcElla0ZrUW1kT1ZrSkJiMVJHYlhReFdXMVdhRnBITURaWk1uZ3hZek5TYkdOcE1XaGFSekZ3WW01TmVFZFVRVmhDWjA1V1FrRk5WRVZIZERGWmJWWjVDbUp0VmpCYVdFMTBXVmRTZEdGWE5IZG5aMFZwVFVFd1IwTlRjVWRUU1dJelJGRkZRa0ZSVlVGQk5FbENSSGRCZDJkblJVdEJiMGxDUVZGRVVEUm1ZM1FLWlN0TU1WaFFjVWRsVW1SblkwcDBTSGhFTW5KNmRXRkJPSGN6VXpCaVkxWlBVRWRyUTJSc1ZIVllObWsxTkVoclQwMXJUMFZhU1ZkblJ6WjBZbTVtWkFwMGJrSkJMMU5RYjA1alYwazVNMHBXT0VkbGNHNXhSMVJaUm5sellYVjNiWGQ2Um0xb1RtUk9ORGt5TWpVdmRUSkZhVUZST0VKbVVtSnhkV05YUWtnMENqRmplREpIVjB0SFNVSlZkMk00V0UwME0xaFRWRlJ6WTB4aFJFaENUWGhoV21waGJFMHpUMkoxU1VacmNqQnphekYwYzFCNU1uRXlaRk42YkRjck5FSUtUMlJsU0dRM1VWZDVUMkZxVFZSMUswTlZiRFp5T1M5WmQwcG1hRmxvUWxaTVEzSXdLelkzWkRObk9UTmtXR2xJUmtKR1dqSm9UR3BzUjFoVkt5OVVPQXBPYmxoV2EzUk9NekZxVUVKRFV6VTNTbEV2VmpkcVpEVkZiblJFTWtKaGNIbHBWalV4V0N0eVpsRkhkMUJ3WTBFeFQyTjNRbFJoUlRSV1RrVkpSVFI1Q2pkdE4ybEpOMGwyVVU1cFdFUlZhMHhCWjAxQ1FVRkhhbFpxUWxWTlFUUkhRVEZWWkVSM1JVSXZkMUZGUVhkSlJtOUVRVlJDWjA1V1NGTlZSVVJFUVVzS1FtZG5ja0puUlVaQ1VXTkVRV3BCVFVKblRsWklVazFDUVdZNFJVRnFRVUZOUWpoSFFURlZaRWwzVVZsTlFtRkJSa3h4UXpVNWVWTkRlRUUyYlZobFlRcFVOemhDZVVWMWNWRldiM1pOUVRCSFExTnhSMU5KWWpORVVVVkNRM2RWUVVFMFNVSkJVVUpHVVdSd1VEWkRRM2s0WjFZMU4xcHpTWFpQVlZrdk5uUTFDbnA1Vm5vMk1qRTBVbG95TW1kc2VUZE5kRFYxTVU1c1dTOW5lblJOWlRkVFoweHFjVm9yZFdoVU1tUXhOazl2VUdoVWJFNHlZVFJuUm1GeldHNVljVUlLYlZNMk1IQjRORnBVWkd0V2VHdHFhekpLVG5scVJFbDFNM1phYmxSSFRHWm1hMHh0TUU4NWEwZHhVRlk1UnpoeWFHZGxTRXd3T1RKMVUwZFJjWGhCZEFvMVIxVjNUMFpLZGpkaE5XNXdXbUpYVDFWdVlXcE9VRWRCVG1oSlREUkxiaXRHYlRZeVZFeHpNMDVWUlZaWlMzSkJSakZUTmtwTmVGTmFOV05xV205RUNtUmpURnBFUkdGWGJEWk1TV3hMZFN0b1JFcHhiWGg0VjB0eWVrTnRkV2xtV2xjMlpqVlVkVGN2VEcxTU5YWTVXamxvTVU0d2MzQmhUblpZYldkaGFFWUtNelF3UXpWcVMzaHBZa2hzVkRKSFJFczJSRVJKVEZZM2VEQkhOMjVsWmtwNksxQllSbHA2V201b1Z6SlRWbGhVYUhGRWEwSnZlVE12YjB0bUNpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwSwogICAgY2xpZW50LWtleS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFwTlNVbEZjRUZKUWtGQlMwTkJVVVZCZWl0SU0weFlkbWs1Vm5vMmFHNXJXRmxJUTJKU09GRTVjVGczYldkUVRVNHdkRWN6UmxScWVIQkJibHBWTjJ3ckNtOTFaVUkxUkdwS1JHaEhVMFp2UW5WeVZ6VXpNMkphZDFGUU1HbzJSRmhHYVZCa2VWWm1RbTV4V2pab2F6SkNZM0pIY25OS2MwMTRXbTlVV0ZSbFVHUUtkSFZtTjNSb1NXZEZVRUZZTUZjMmNtNUdaMUlyVGxoTlpHaHNhV2hwUVZaTlNGQkdlazlPTVRCck1EZElRekpuZUhkVVRWZHRXVEp3VkU1NmJUZHBRZ3BhU3psTVNrNWlZa1E0ZEhGMGJsVnpOV1V2ZFVGVWJsaG9NMlV3Um5OcWJXOTZSVGQyWjJ4S1pYRXZaakpOUTFnMFYwbFJWbE4zY1RsUWRYVXpaRFJRQ21RelZqUm9lRkZTVjJSdlV6UTFVbXd4VUhZd0wwUmFNVEZhVEZSa09WbDZkMUZyZFdWNVZWQXhaVFF6WlZKS04xRTVaMWR4WTI5c1pXUldMM0V6TUVJS2MwUTJXRUZPVkc1TlFWVXlhRTlHVkZKRFFrOU5kVFYxTkdsUGVVd3dSRmxzZHpGS1EzZEpSRUZSUVVKQmIwbENRVWRqTTJKNE9IRlVMMjgzTDBSblp3cHFOMkpYYzI5TWFuTlRkRXBSTjBoeEwwbFpZMnR4WWpZMmVDOXFkRUZEWVV4WlNqbExSVlpGTTBzNFltdHJiVkkwTWtwQ1dUQnhNbVIxTkU1M2JrcGtDbTlKVEhSUFpIWndlbU0yZFdOT1RsbEhVM1ZUZFRCYVZIcEpaREpzWlVOaGNqQTVUbmd2UlZNNWRFUjVTbE5HWW5KbFIyMDJUMWRCV1d4RFVrMW9XV1VLWml0aVlURlBPWGxWVDBodFluUTRRekpNTVRSaFJ6ZExTMWd2UlUxNFNtcFpNWE5vZVVZd1oyOVJOMjlhYlRrMmIwTmlRMFEwUTFkc1RWZGxlVkpVZHdwV2FGZHVZbUZNYlZCd2RGRm9USFZSUlM5VmFrdHNZbUZpYjI4MGEwUTFSVzR4YVU5V2MxSmtRMkpLTkdSRWN6aHRRWEpZU1hKRWFFSnhOak53WmtoVENtWlNSVkZQZDNGMmJIUjZTaTlyVkZOTGFVVk1lVk5UT1hWUFlYQkZNR0Z5YkhOc09UazBUU3RCU0ZoaVltcDZTazlvWTNkNFJWVllhR1EzZFhwdlluTUtlWEZxY0M5SFJVTm5XVVZCTml0S1R6ZGhjVGhQYjBGaFFWTkhWbmxpUW1aSlVrbG5OV0ZsVGtaRVJXZEVPRlk0VmpOd2RtMXdUVU5tYUhGSllUbHFVQXB0VlRWeVNIcDRRa2xKZFZCSFZ6TjBVM04wVWtSVmVWcENTMWhtWW5Jd1JHcHdaV2g2WTJoQlduRmpNeloyVEUxNmFIWlNiMnAwYUROclMyWmhiemswQ2xSWldsSkZZbGhQTkZaV1dGWm9jV2wyWTNsRVFUbG1PR1JLY1V0WmIxaGlhV2h1UmxKMVQxaEJObkZxVG5Ock0xTmliM016U1dORFoxbEZRVFJhZUZrS05HOUZOM2Q1VkdaSGNFcEhPVlJTUjAxc1YyZ3lNWGM1UzJSVFFsRlJhMEU0YlRKYVQzQXJNalJuVm1abU4zbDJhM2RFYzJvMlpGQkpaVzQzV0hSclN3cFFkRTVsTjAxMlpXRmFTbWxtTnpWV2FIZGxZMFZaTVdRMFVIbFdiRGR2ZGsxNlVrUjNZMnhMTmtSbWFWQlhlR2xTUkRoNVMxZDJha2hrWlVKRmRVUjZDazVYWmtaUmJXRlVXVU5VY1dsemR6QldiRlExVDJrME9ETm1PRXRxYlhneVdGbEhUV1JHTUVObldVSktOV3hwTnpsUFYweHViRFpJVWtSS1pGRmlhRXdLT0VKWlIxaFFka0lyTjBsRWRuVmpOWE5OTkU5TE1HZzBiMWM1YWl0clZIWjZjbGRaZWpWUVNEQnVSU3RyYTFod1ZFNUdWSHBWSzFSUFZGSkxlVlZUTkFwQk5rWmFhWGRrUTBsa2JFODNhM0JxZFVOMGVFaENSMHBTUnpSV1VVZFdPRkpFZUZwNFFTOVJXVXRDUVVKYVFTdDZhbVYwYlVwcmNraHpLMFZHYkU4eENtSkhWakV4UVN0WWQyNXVibnBDY0dGTGN6SnlUMUZMUW1kUlJFZHVhalJwUzIxUVUybE5UbWhSVTFneUswODFWRzlqS3poeWNHVnhSemh6ZFRGb05XWUtWSFF4TTBoMVUwTldkbWxqU0VORU1UWm1jRmt2V2twTk5sSkVSR28wTDFabU5FRjVUamhwTW1GSmEwOXlVMGhsYm01U2JtWXlNRWRvVm1WMFJ6bDNlQW94TDBaUGVWVmxTVFpMYm10TFYySmFZbXRzWVRkblFXdGFXRlJqYVdVeVZFNXhaMU55VUhSU2VWTTBlWGN4VUZGTVZEWTRWMkpvT0U0cmRYcE9kMnc1Q21sSE9TdG5VVXRDWjFGRFpXUXdVR2xGWWxkSFVFdzJSMmhxVTI1YVdtcEZia2xOS3pNMkwxZzVNVWhyVld0d1NWZ3pUVkJMZEd0b1ZYZ3JSbWhsTTA0S1JGVTFlVnBuU1RCMlZFdGlPV0UyV2xkRWRFOW9Xa2xPWW1vNFRXUTJTR3hWV1V4M1ZFMUJiM0prSzFkSlpHcG1ZMUpJVUhoa2QwdExSVm92VlZaQ1RRcG5UbTA1Y25Bd1NYaEthVlJGV2pOVFlXOHlkMWN2WlRSRWVsZ3JiSEl4UlhsWFR6TTJXVEU1SzA5QldGaDJibnB3WlhWdVlYYzlQUW90TFMwdExVVk9SQ0JTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFvPQ==